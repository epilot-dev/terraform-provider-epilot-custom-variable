// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/operations"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// Ensure provider defined types fully satisfy framework interfaces.
var _ resource.Resource = &TaxResource{}
var _ resource.ResourceWithImportState = &TaxResource{}

func NewTaxResource() resource.Resource {
	return &TaxResource{}
}

// TaxResource defines the resource implementation.
type TaxResource struct {
	client *sdk.SDK
}

// TaxResourceModel describes the resource data model.
type TaxResourceModel struct {
	Active      types.Bool   `tfsdk:"active"`
	Description types.String `tfsdk:"description"`
	ID          types.String `tfsdk:"id"`
	Rate        types.String `tfsdk:"rate"`
	Region      types.String `tfsdk:"region"`
	Type        types.String `tfsdk:"type"`
}

func (r *TaxResource) Metadata(ctx context.Context, req resource.MetadataRequest, resp *resource.MetadataResponse) {
	resp.TypeName = req.ProviderTypeName + "_tax"
}

func (r *TaxResource) Schema(ctx context.Context, req resource.SchemaRequest, resp *resource.SchemaResponse) {
	resp.Schema = schema.Schema{
		MarkdownDescription: "Tax Resource",
		Attributes: map[string]schema.Attribute{
			"active": schema.BoolAttribute{
				Required: true,
			},
			"description": schema.StringAttribute{
				Computed: true,
				Optional: true,
			},
			"id": schema.StringAttribute{
				Computed: true,
			},
			"rate": schema.StringAttribute{
				Required: true,
			},
			"region": schema.StringAttribute{
				Required:    true,
				Description: `must be one of ["DE", "AT", "CH"]`,
				Validators: []validator.String{
					stringvalidator.OneOf(
						"DE",
						"AT",
						"CH",
					),
				},
			},
			"type": schema.StringAttribute{
				Required:    true,
				Description: `must be one of ["VAT", "Custom"]`,
				Validators: []validator.String{
					stringvalidator.OneOf(
						"VAT",
						"Custom",
					),
				},
			},
		},
	}
}

func (r *TaxResource) Configure(ctx context.Context, req resource.ConfigureRequest, resp *resource.ConfigureResponse) {
	// Prevent panic if the provider has not been configured.
	if req.ProviderData == nil {
		return
	}

	client, ok := req.ProviderData.(*sdk.SDK)

	if !ok {
		resp.Diagnostics.AddError(
			"Unexpected Resource Configure Type",
			fmt.Sprintf("Expected *sdk.SDK, got: %T. Please report this issue to the provider developers.", req.ProviderData),
		)

		return
	}

	r.client = client
}

func (r *TaxResource) Create(ctx context.Context, req resource.CreateRequest, resp *resource.CreateResponse) {
	var data *TaxResourceModel
	var plan types.Object

	resp.Diagnostics.Append(req.Plan.Get(ctx, &plan)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(plan.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	request := *data.ToSharedTaxCreate()
	res, err := r.client.Tax.CreateTax(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.Tax != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedTax(res.Tax)
	refreshPlan(ctx, plan, &data, resp.Diagnostics)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *TaxResource) Read(ctx context.Context, req resource.ReadRequest, resp *resource.ReadResponse) {
	var data *TaxResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.State.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	// read.tax.hydrateread.tax.hydrate impedance mismatch: "boolean" != "class"trace=["Tax#create.req"]
	// {"ResponseEnvelope":false,"Extensions":{"x-speakeasy-root":true,"x-speakeasy-entity":"Tax","x-speakeasy-trace":{"Tax#create.req":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get-request":true,"x-speakeasy-in-get":true},"Format":"","Comments":null,"Discriminator":null,"Scope":"shared","IsComponent":true,"Truncated":false,"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"OriginalName":"TaxCreate","OutputLocation":"models/shared","Type":"class","Examples":[],"CircularReference":null,"Enum":null,"Input":false,"ResolvedModel":"TaxCreate","Original":{"Name":"TaxCreate","OriginalName":"TaxCreate","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":false,"MustUse":false},{"Type":"component","Identifier":"true","Used":false,"MustUse":false}],"Type":"class","ItemType":null,"Fields":[{"Name":"active","OriginalName":"active","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"active"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"description","OriginalName":"description","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"description"}],"Nullable":false,"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"rate","OriginalName":"rate","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"rate"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"region","OriginalName":"region","Type":{"Name":"TaxCreate_region","OriginalName":"region","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["DE","AT","CH"],"Names":[],"Open":false,"Format":""},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"region"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"type","OriginalName":"type","Type":{"Name":"TaxCreate_type","OriginalName":"type","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["VAT","Custom"],"Names":[],"Open":false,"Format":""},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null}],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"shared","IsComponent":true,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{"x-speakeasy-entity":"Tax"},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":false,"MustUse":false},{"Type":"component","Identifier":"true","Used":false,"MustUse":false}],"Name":"Tax","Output":false,"ItemType":null,"EventStreamEnvelope":false,"AssociatedTypes":[],"Fields":[{"Optional":false,"Default":null,"Annotations":[{"Ignore":false,"FieldName":"_id"}],"ErrorMessage":false,"Type":{"Enum":null,"Discriminator":null,"ItemType":null,"Scope":"","EventStreamEnvelope":false,"ResponseEnvelope":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[{}],"Format":"uuid","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Name":"","Examples":[{}],"Input":false,"Validations":{"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null},"Extensions":{"x-speakeasy-in-get":true,"x-speakeasy-trace":{"Tax#create.resp.id":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true},"Comments":null,"Output":false,"Fields":[],"CircularReference":null,"OriginalName":"","AssociatedTypes":[],"Truncated":false,"IsComponent":false,"OutputLocation":"","Type":"string","Format":"uuid","ResolvedModel":"","ContextStack":[]},"Name":"_id","Nullable":false,"Const":null,"Comments":null,"IsAdditionalProperties":false,"OriginalName":"_id"},{"Optional":false,"Const":null,"IsAdditionalProperties":false,"OriginalName":"active","Name":"active","Nullable":false,"Default":null,"Comments":null,"Annotations":[{"FieldName":"active","Ignore":false}],"ErrorMessage":false,"Type":{"Name":"","Output":false,"Scope":"","Truncated":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Format":"","IsComponent":false,"ItemType":null,"Validations":{"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null},"OriginalName":"","Enum":null,"Discriminator":null,"Comments":null,"Type":"boolean","ResolvedModel":"","CircularReference":null,"Input":false,"ResponseEnvelope":false,"OutputLocation":"","Fields":[],"ContextStack":[],"EventStreamEnvelope":false,"AssociatedTypes":[],"Examples":[],"Extensions":{"x-speakeasy-trace":{"Tax#create.req.active":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true}}},{"Default":null,"Comments":null,"ErrorMessage":false,"Type":{"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Format":"","Output":false,"Extensions":{"x-speakeasy-in-get":true,"x-speakeasy-trace":{"Tax#create.req.description":true},"x-speakeasy-param-computed":true,"x-untouched":true},"OutputLocation":"","Fields":[],"Truncated":false,"CircularReference":null,"Name":"","Examples":[],"Validations":{"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null},"Enum":null,"AssociatedTypes":[],"Type":"string","Discriminator":null,"IsComponent":false,"ResolvedModel":"","OriginalName":"","Scope":"","EventStreamEnvelope":false,"ResponseEnvelope":false,"Input":false,"ItemType":null,"ContextStack":[],"Comments":null},"Name":"description","Optional":true,"Annotations":[{"Ignore":false,"FieldName":"description"}],"IsAdditionalProperties":false,"OriginalName":"description","Nullable":false,"Const":null},{"Optional":false,"Default":null,"Const":null,"Annotations":[{"Ignore":false,"FieldName":"rate"}],"ErrorMessage":false,"OriginalName":"rate","Type":{"Fields":[],"Validations":{"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null},"Examples":[],"AssociatedTypes":[],"Truncated":false,"Name":"","Extensions":{"x-speakeasy-trace":{"Tax#create.req.rate":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true},"Format":"","ContextStack":[],"Enum":null,"Comments":null,"Discriminator":null,"Output":false,"EventStreamEnvelope":false,"IsComponent":false,"CircularReference":null,"Type":"string","OutputLocation":"","OriginalName":"","Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Input":false,"ItemType":null,"Scope":"","ResponseEnvelope":false,"ResolvedModel":""},"Name":"rate","Nullable":false,"Comments":null,"IsAdditionalProperties":false},{"OriginalName":"region","Optional":false,"Default":null,"Const":null,"Annotations":[{"Ignore":false,"FieldName":"region"}],"Type":{"EventStreamEnvelope":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true,"x-speakeasy-trace":{"Tax#create.req.region":true}},"AssociatedTypes":[],"Truncated":false,"Output":false,"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"OriginalName":"region","Type":"enum","Discriminator":null,"IsComponent":false,"Examples":[],"ResponseEnvelope":false,"Name":"TaxCreate_region","CircularReference":null,"ItemType":null,"Original":{"Name":"TaxCreate_region","OriginalName":"region","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["DE","AT","CH"],"Names":[],"Open":false,"Format":""},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"OutputLocation":"models/shared","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Fields":[],"Format":"","Scope":"shared","ResolvedModel":"TaxCreate","Enum":{"Values":["DE","AT","CH"],"Type":{"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Discriminator":null,"Fields":[],"ItemType":null,"CircularReference":null,"ResponseEnvelope":false,"Type":"string","Extensions":{},"Comments":null,"ResolvedModel":"","OriginalName":"","Enum":null,"Validations":{"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null},"ContextStack":[],"Scope":"","EventStreamEnvelope":false,"AssociatedTypes":[],"Input":false,"OutputLocation":"","Examples":[],"Truncated":false,"Name":"","Format":"","IsComponent":false,"Output":false},"Open":false,"Names":[]},"Comments":null,"Input":false},"Name":"region","Nullable":false,"Comments":null,"IsAdditionalProperties":false,"ErrorMessage":false},{"Comments":{"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The tax id","ExternalDocs":null},"Annotations":[{"ParamType":"pathParam","Name":"taxId","Serialization":"","Style":"simple","Explode":false,"FieldType":{"Name":"","Type":"string","Validations":{"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null},"Enum":null,"Truncated":false,"Discriminator":null,"ComplexAny":false,"ContextStack":[],"AssociatedTypes":[],"Scope":"","IsComponent":false,"Extensions":{"x-speakeasy-match":"id"},"Examples":[{}],"Format":"uuid","EventStreamEnvelope":false,"Fields":[],"Output":false,"OriginalName":"","ItemType":null,"Comments":{"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The tax id","ExternalDocs":null},"Input":false,"OutputLocation":"","ResolvedModel":"","ResponseEnvelope":false},"Hidden":false}],"IsAdditionalProperties":false,"ErrorMessage":false,"Default":null,"Const":null,"Name":"taxId","Nullable":false,"Optional":false,"OriginalName":"","Type":{"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"ResponseEnvelope":false,"Discriminator":null,"Truncated":false,"OutputLocation":"","AssociatedTypes":[],"Examples":[{}],"Input":false,"ResolvedModel":"","IsComponent":false,"ItemType":null,"CircularReference":null,"OriginalName":"","Extensions":{"x-speakeasy-trace":{"Tax#get.req.tax_id":true},"x-speakeasy-match":"id"},"Comments":{"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The tax id","ExternalDocs":null},"Scope":"","Name":"","Enum":null,"Format":"uuid","Fields":[],"Output":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":{"Summary":"","Description":"The tax id","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Extensions":{"x-speakeasy-match":"id"},"Examples":[{}],"Format":"uuid","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"ContextStack":[],"Type":"string","EventStreamEnvelope":false}},{"Name":"type","Optional":false,"Const":null,"Comments":null,"IsAdditionalProperties":false,"ErrorMessage":false,"OriginalName":"type","Type":{"ItemType":null,"ResponseEnvelope":false,"ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Format":"","EventStreamEnvelope":false,"ResolvedModel":"TaxCreate","AssociatedTypes":[],"Scope":"shared","Truncated":false,"CircularReference":null,"Input":false,"Validations":{"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null},"Name":"TaxCreate_type","Enum":{"Type":{"Scope":"","Truncated":false,"Name":"","OriginalName":"","ResolvedModel":"","ContextStack":[],"EventStreamEnvelope":false,"Extensions":{},"AssociatedTypes":[],"IsComponent":false,"Output":false,"Validations":{"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null},"CircularReference":null,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Enum":null,"Discriminator":null,"Examples":[],"ItemType":null,"ResponseEnvelope":false,"OutputLocation":"","Type":"string","Comments":null,"Fields":[],"Format":"","Input":false},"Open":false,"Names":[],"Values":["VAT","Custom"]},"Discriminator":null,"OriginalName":"type","Comments":null,"Examples":[],"Output":false,"Original":{"Name":"TaxCreate_type","OriginalName":"type","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["VAT","Custom"],"Names":[],"Open":false,"Format":""},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"OutputLocation":"models/shared","Type":"enum","Extensions":{"x-speakeasy-trace":{"Tax#create.req.type":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true},"Fields":[],"IsComponent":false},"Nullable":false,"Default":null,"Annotations":[{"Ignore":false,"FieldName":"type"}]}]}
	// {"Fields":[],"Truncated":false,"Type":"boolean","Comments":{"Description":"Hydrates entities in relations when passed true","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"OutputLocation":"","Enum":null,"IsComponent":false,"ResolvedModel":"","OriginalName":"","Format":"","ContextStack":[],"Extensions":{},"AssociatedTypes":[],"Discriminator":null,"ItemType":null,"EventStreamEnvelope":false,"Scope":"","Examples":[],"CircularReference":null,"Name":"","Input":false,"Output":false,"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"ResponseEnvelope":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":{"Summary":"","Description":"Hydrates entities in relations when passed true","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false}}
	var hydrate *bool
	taxID := data.ID.ValueString()
	request := operations.GetTaxRequest{
		Hydrate: hydrate,
		TaxID:   taxID,
	}
	res, err := r.client.Tax.GetTax(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode == 404 {
		resp.State.RemoveResource(ctx)
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.Tax != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedTax(res.Tax)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *TaxResource) Update(ctx context.Context, req resource.UpdateRequest, resp *resource.UpdateResponse) {
	var data *TaxResourceModel
	var plan types.Object

	resp.Diagnostics.Append(req.Plan.Get(ctx, &plan)...)
	if resp.Diagnostics.HasError() {
		return
	}

	merge(ctx, req, resp, &data)
	if resp.Diagnostics.HasError() {
		return
	}

	taxCreate := *data.ToSharedTaxCreate()
	taxID := data.ID.ValueString()
	request := operations.UpdateTaxRequest{
		TaxCreate: taxCreate,
		TaxID:     taxID,
	}
	res, err := r.client.Tax.UpdateTax(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.Tax != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedTax(res.Tax)
	refreshPlan(ctx, plan, &data, resp.Diagnostics)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *TaxResource) Delete(ctx context.Context, req resource.DeleteRequest, resp *resource.DeleteResponse) {
	var data *TaxResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.State.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	taxID := data.ID.ValueString()
	request := operations.DeleteTaxRequest{
		TaxID: taxID,
	}
	res, err := r.client.Tax.DeleteTax(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}

}

func (r *TaxResource) ImportState(ctx context.Context, req resource.ImportStateRequest, resp *resource.ImportStateResponse) {
	resp.Diagnostics.Append(resp.State.SetAttribute(ctx, path.Root("id"), req.ID)...)
}
